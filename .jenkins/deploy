pipeline {
  agent { label 'docker' }
  stages {
    stage('Build') {
      steps {
        sh "docker build --build-arg environment=prod -t openstax/cnx-db:dev ."
      }
    }
    stage('Publish Dev Container') {
      steps {
        // 'docker-registry' is defined in Jenkins under credentials
        withDockerRegistry([credentialsId: 'docker-registry', url: '']) {
          sh "docker push openstax/cnx-db:dev"
        }
      }
    }
    stage('Publish Release') {
      environment {
        TWINE_USERNAME = 'openstax'
        TWINE_PASSWORD = credentials('pypi-openstax-password')
      }
      when {
        expression {
          release = sh(returnStdout: true, script: 'git tag -l --points-at HEAD | head -n 1 | sed -e "s/^v//"').trim()
          return release
        }
      }
      steps {
        withDockerRegistry([credentialsId: 'docker-registry', url: '']) {
          sh "docker tag openstax/cnx-db:dev openstax/cnx-db:${release}"
          sh "docker tag openstax/cnx-db:dev openstax/cnx-db:latest"
          sh "docker push openstax/cnx-db:${release}"
          sh "docker push openstax/cnx-db:latest"
        }
        // FIXME Note, this uses the Test PyPI. Since we are unable to test these changes prior to use, the first occurance will be test test.
        // Note, '.git' is a volume, because versioneer needs it to resolve the python distribution's version. 
        sh "docker run --rm -e TWINE_USERNAME -e TWINE_PASSWORD -v ${PWD}/.git:/src/.git:ro openstax/cnx-db:latest /bin/bash -c \"pip install -q twine && python setup.py bdist_wheel --universal && twine upload --repository-url https://test.pypi.org/legacy/ dist/*\""
      }
    }
  }
}
